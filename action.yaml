name: build
description: Build docker image
inputs:
  aws_region: 
    default: ap-northeast-1
  aws_role_arn:
    require: true
  deploy_ssh_key:
    default: ""
  target: 
    require: true
  build_args: 
    default: ""
  ecr_repository: 
    require: true
  gitsha_image_tag:
    require: true
  target_image_tag:
    require: true
outputs:
  target_image_url: BBBBBBBBB
    # value: ${{ steps.build.outputs.target_image_url }}
    # value: RRRRRRRRRRRRRRR
runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS Credentials From Web Identity
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        role-to-assume: ${{ inputs.aws_role_arn }}
        aws-region: ${{ inputs.aws_region }}

    - name: Login to ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to ECR
      id: build
      shell: bash
      run: |
        # Image URL
        GITSHA_IMAGE_URL=${{ steps.login-ecr.outputs.registry }}/${{ inputs.ecr_repository }}:${{ inputs.gitsha_image_tag }}
        TARGET_IMAGE_URL=${{ steps.login-ecr.outputs.registry }}/${{ inputs.ecr_repository }}:${{ inputs.target_image_tag }}
        echo "target_image_url=$(echo $TARGET_IMAGE_URL)" >> $GITHUB_OUTPUT
        echo $GITHUB_OUTPUT
        cat $GITHUB_OUTPUT
        # SSHエージェント起動
        eval "$(ssh-agent)"
        # SSHエージェントにキーを登録
        # golangのビルド時に、private repositoryにあるパッケージを参照する際に必要
        if [ "${{ inputs.deploy_ssh_key }}" != "" ]; then
          echo "${{ inputs.deploy_ssh_key }}" > deploy_ssh_key
          chmod 600 deploy_ssh_key
          ssh-add -k deploy_ssh_key
        fi
        # Docker build
        DOCKER_BUILDKIT=1 docker build \
          --ssh default \
          --target ${{ inputs.target }} \
          ${{ inputs.build_args }} \
          -t $GITSHA_IMAGE_URL \
          .
        # Docker push
        docker tag $GITSHA_IMAGE_URL $TARGET_IMAGE_URL
        docker push $TARGET_IMAGE_URL
